server {
        server_name cloud.example.org;
        listen 80;
		location ^~ /.well-known/ {
			alias /var/www/letsencrypt/.well-known/;
			allow all;
		}
        location / {
                return 301 https://$server_name$request_uri;
        }
}

server {
        server_name cloud.example.org;
        listen 443 ssl http2;

### forward request and error logs to docker log collector:	
		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;

### For persistent logs:
#		access_log /logs/access.log;
#		error_log /logs/error.log;

## Use "openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes -out server.crt -keyout server.key" for create an demo Cert!
        ssl_certificate /demo/server.crt;
        ssl_certificate_key /demo/server.key;

### acme.sh
## RSA Certs
#        ssl_certificate /certs/cloud.example.org/fullchain.cer;
#        ssl_certificate_key /certs/cloud.example.org/cert.key;
#        ssl_trusted_certificate /certs/cloud.example.org/ca.cer;
## ECC Certs
#        ssl_certificate /certs/cloud.example.org_ecc/fullchain.cer;
#        ssl_certificate_key /certs/cloud.example.org_ecc/cert.key;
#        ssl_trusted_certificate /certs/cloud.example.org_ecc/ca.cer;

### Certbot Certs
#        ssl_certificate /etc/letsencrypt/live/cloud.example.org/fullchain.pem;
#        ssl_certificate_key /etc/letsencrypt/live/cloud.example.org/privkey.pem;
#        ssl_trusted_certificate /etc/letsencrypt/live/cloud.example.org/chain.pem;

       ssl_protocols TLSv1.2 TLSv1.3;
       ssl_prefer_server_ciphers on;
       ssl_ciphers "EECDH+AESGCM:EDH+AESGCM";
       ssl_ecdh_curve secp384r1;
       ssl_session_cache shared:SSL:10m;
       ssl_session_tickets off;
       ssl_stapling on;
       ssl_stapling_verify on;
       
# Temp fix for large file upload Faild (Error when assembling chunks, status code 504)
        proxy_read_timeout 43200s;
        proxy_send_timeout 43200s;
        proxy_connect_timeout 43200s;
		client_max_body_size 10G;

       location / {
                proxy_pass http://nextcloud:8888/;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header Host $http_host;
                proxy_buffering off;
        }
		
        location /ds-vpath/ {
                rewrite /ds-vpath/(.*) /$1  break;
                proxy_pass http://onlyoffice/;
                proxy_redirect     off;
                client_max_body_size 100m;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Host $host/ds-vpath;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
}
